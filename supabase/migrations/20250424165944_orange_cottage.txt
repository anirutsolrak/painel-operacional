/*
  # Update call records table schema

  1. Changes
    - Drop existing table if exists
    - Create new table with exact columns from CSV format:
      - call_timestamp (timestamptz) - Call timestamp
      - duration_seconds (integer) - Call duration in seconds
      - cpf_cnpj (text) - Customer ID
      - uf (varchar(2)) - State abbreviation
      - user_group (text) - User group/department
      - operator_name (text) - Operator name
      - tabulation (text) - Call result/status
      - uploaded_by (uuid) - Reference to auth.users
      - uploaded_at (timestamptz) - Upload timestamp

  2. Security
    - Enable RLS
    - Add policies for authenticated users to view all records
    - Add policies for authenticated users to insert their own records
*/

DROP TABLE IF EXISTS call_records;

CREATE TABLE call_records (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    call_timestamp timestamptz NOT NULL,
    duration_seconds integer NOT NULL,
    cpf_cnpj text,
    uf varchar(2) NOT NULL,
    user_group text NOT NULL,
    operator_name text NOT NULL,
    tabulation text NOT NULL,
    uploaded_by uuid REFERENCES auth.users(id),
    uploaded_at timestamptz DEFAULT now()
);

-- Enable RLS
ALTER TABLE call_records ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "Users can view all call records"
    ON call_records
    FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Users can insert their own records"
    ON call_records
    FOR INSERT
    TO authenticated
    WITH CHECK (auth.uid() = uploaded_by);

-- Create indexes for better performance
CREATE INDEX idx_call_records_timestamp ON call_records(call_timestamp);
CREATE INDEX idx_call_records_operator ON call_records(operator_name);
CREATE INDEX idx_call_records_uf ON call_records(uf);
CREATE INDEX idx_call_records_uploaded_at ON call_records(uploaded_at);