/*
  # Create call records table

  1. New Tables
    - `call_records`
      - `id` (uuid, primary key)
      - `call_timestamp` (timestamptz) - When the call occurred
      - `duration_seconds` (integer) - Call duration in seconds
      - `cpf_cnpj` (text) - Customer identification
      - `uf` (text) - State abbreviation
      - `user_group` (text) - User group/department
      - `operator_name` (text) - Operator who handled the call
      - `tabulation` (text) - How the call was categorized
      - `created_at` (timestamptz) - Record creation timestamp
      - `uploaded_by` (uuid) - Reference to auth.users
      
  2. Security
    - Enable RLS on `call_records` table
    - Add policies for authenticated users
*/

-- Create the call_records table
CREATE TABLE IF NOT EXISTS call_records (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    call_timestamp timestamptz NOT NULL,
    duration_seconds integer NOT NULL,
    cpf_cnpj text,
    uf text NOT NULL,
    user_group text NOT NULL,
    operator_name text NOT NULL,
    tabulation text NOT NULL,
    created_at timestamptz DEFAULT now(),
    uploaded_by uuid REFERENCES auth.users(id)
);

-- Enable Row Level Security
ALTER TABLE call_records ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "Users can view all call records"
    ON call_records
    FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Users can insert their own records"
    ON call_records
    FOR INSERT
    TO authenticated
    WITH CHECK (auth.uid() = uploaded_by);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_call_records_timestamp 
    ON call_records(call_timestamp);

CREATE INDEX IF NOT EXISTS idx_call_records_operator 
    ON call_records(operator_name);

CREATE INDEX IF NOT EXISTS idx_call_records_uf 
    ON call_records(uf);